// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A flow that predicts whether a user prefers absolute or relative leaderboards.
 *
 * - predictLeaderboardType - A function that predicts the preferred leaderboard type for a user.
 * - PredictLeaderboardTypeInput - The input type for the predictLeaderboardType function.
 * - PredictLeaderboardTypeOutput - The return type for the predictLeaderboardType function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PredictLeaderboardTypeInputSchema = z.object({
  playerType: z
    .enum(['Socializer', 'Achiever', 'Explorer', 'Killer'])
    .describe('The user\'s Bartle player type.'),
  engagementLevel: z
    .enum(['High', 'Medium', 'Low'])
    .describe('The user\'s engagement level with competitive features.'),
});
export type PredictLeaderboardTypeInput = z.infer<
  typeof PredictLeaderboardTypeInputSchema
>;

const PredictLeaderboardTypeOutputSchema = z.object({
  leaderboardType: z
    .enum(['Absolute', 'Relative'])
    .describe('The predicted preferred leaderboard type for the user.'),
  reasoning: z
    .string()
    .describe('The reasoning behind the leaderboard type prediction.'),
});
export type PredictLeaderboardTypeOutput = z.infer<
  typeof PredictLeaderboardTypeOutputSchema
>;

export async function predictLeaderboardType(
  input: PredictLeaderboardTypeInput
): Promise<PredictLeaderboardTypeOutput> {
  return predictLeaderboardTypeFlow(input);
}

const predictLeaderboardTypePrompt = ai.definePrompt({
  name: 'predictLeaderboardTypePrompt',
  input: {schema: PredictLeaderboardTypeInputSchema},
  output: {schema: PredictLeaderboardTypeOutputSchema},
  prompt: `You are an expert in user engagement and gamification.
Given a user's player type and engagement level, predict whether they would prefer absolute or relative leaderboards.

Player Type: {{{playerType}}}
Engagement Level: {{{engagementLevel}}}

Consider the following:
- Achievers and Killers typically prefer absolute leaderboards.
- Socializers and Explorers typically prefer relative leaderboards.
- High engagement indicates a preference for competitive features.
- Low engagement indicates a preference against competitive features.

Reasoning:
`,
});

const predictLeaderboardTypeFlow = ai.defineFlow(
  {
    name: 'predictLeaderboardTypeFlow',
    inputSchema: PredictLeaderboardTypeInputSchema,
    outputSchema: PredictLeaderboardTypeOutputSchema,
  },
  async input => {
    const {output} = await predictLeaderboardTypePrompt(input);
    return output!;
  }
);
